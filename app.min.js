function AudioKeys(e){var t=this;t._setState(e),t._listeners={},t._bind()}"undefined"!=typeof module&&(module.exports=AudioKeys),AudioKeys.prototype._setState=function(e){var t=this;e||(e={}),t._state={},t._extendState({polyphony:4,rows:1,priority:"last",rootNote:60,octaveControls:!0,octave:0,velocityControls:!0,velocity:127,keys:[],buffer:[]}),t._extendState(e)},AudioKeys.prototype._extendState=function(e){var t=this;for(var o in e)t._state[o]=e[o]},AudioKeys.prototype.set=function(){var e=this;return 1===arguments.length?e._extendState(arguments[0]):e._state[arguments[0]]=arguments[1],this},AudioKeys.prototype.get=function(e){var t=this;return t._state[e]},AudioKeys.prototype.down=function(e){var t=this;t._listeners.down=(t._listeners.down||[]).concat(e)},AudioKeys.prototype.up=function(e){var t=this;t._listeners.up=(t._listeners.up||[]).concat(e)},AudioKeys.prototype._trigger=function(e){var t=this;if(t._listeners[e]&&t._listeners[e].length){var o=Array.prototype.slice.call(arguments);o.splice(0,1),t._listeners[e].forEach(function(e){e.apply(t,o)})}},AudioKeys.prototype._bind=function(){var e=this;if("undefined"!=typeof window&&window.document){window.document.addEventListener("keydown",function(t){e._addKey(t)}),window.document.addEventListener("keyup",function(t){e._removeKey(t)});var t=!0;setInterval(function(){window.document.hasFocus()!==t&&(t=!t,t||e.clear())},100)}},AudioKeys.prototype._map=function(e){return this._keyMap[this._state.rows][e]+this._offset()},AudioKeys.prototype._offset=function(){return this._state.rootNote-this._keyMap[this._state.rows].root+12*this._state.octave},AudioKeys.prototype._isNote=function(e){return!!this._keyMap[this._state.rows][e]},AudioKeys.prototype._toFrequency=function(e){return 440*Math.pow(2,(e-69)/12)},AudioKeys.prototype._keyMap={1:{root:60,65:60,87:61,83:62,69:63,68:64,70:65,84:66,71:67,89:68,72:69,85:70,74:71,75:72,79:73,76:74,80:75,186:76,222:77},2:{root:60,90:60,83:61,88:62,68:63,67:64,86:65,71:66,66:67,72:68,78:69,74:70,77:71,188:72,76:73,190:74,186:75,191:76,81:72,50:73,87:74,51:75,69:76,82:77,53:78,84:79,54:80,89:81,55:82,85:83,73:84,57:85,79:86,48:87,80:88,219:89,187:90,221:91}},AudioKeys.prototype._addKey=function(e){var t=this;if(t._isNote(e.keyCode)&&!t._isPressed(e.keyCode)){var o=t._makeNote(e.keyCode);t._state.keys=(t._state.keys||[]).concat(o),t._update()}else t._isSpecialKey(e.keyCode)&&t._specialKey(e.keyCode)},AudioKeys.prototype._removeKey=function(e){var t=this;if(t._isPressed(e.keyCode)){for(var o,s=0;s<t._state.keys.length;s++)if(t._state.keys[s].keyCode===e.keyCode){o=t._state.keys[s];break}t._state.keys.splice(t._state.keys.indexOf(o),1),t._update()}},AudioKeys.prototype._isPressed=function(e){var t=this;if(!t._state.keys||!t._state.keys.length)return!1;for(var o=0;o<t._state.keys.length;o++)if(t._state.keys[o].keyCode===e)return!0;return!1},AudioKeys.prototype._makeNote=function(e){var t=this;return{keyCode:e,note:t._map(e),frequency:t._toFrequency(t._map(e)),velocity:t._state.velocity}},AudioKeys.prototype.clear=function(){var e=this;e._state.buffer.forEach(function(t){e._trigger("up",t)}),e._state.keys=[],e._state.buffer=[]},AudioKeys.prototype._update=function(){var e=this,t=e._state.buffer;e._prioritize(),e._diff(t)},AudioKeys.prototype._diff=function(e){var t=this,o=e.map(function(e){return e.keyCode}),s=t._state.buffer.map(function(e){return e.keyCode}),i=[];o.forEach(function(e){-1===s.indexOf(e)&&i.push(e)});var n=[];s.forEach(function(e){-1===o.indexOf(e)&&n.push(e)}),n.forEach(function(e){for(var o=0;o<t._state.buffer.length;o++)if(t._state.buffer[o].keyCode===e){t._trigger("down",t._state.buffer[o]);break}}),i.forEach(function(o){for(var s=0;s<e.length;s++)if(e[s].keyCode===o){t._trigger("up",e[s]);break}})},AudioKeys.prototype._prioritize=function(){var e=this;return e._state.keys.length?(e._state.polyphony>=e._state.keys.length?e._state.keys=e._state.keys.map(function(e){return e.isActive=!0,e}):(e._state.keys=e._state.keys.map(function(e){return e.isActive=!1,e}),e["_"+e._state.priority]()),e._state.buffer=[],void e._state.keys.forEach(function(t){t.isActive&&e._state.buffer.push(t)})):void(e._state.buffer=[])},AudioKeys.prototype._last=function(){for(var e=this,t=e._state.keys.length-e._state.polyphony;t<e._state.keys.length;t++)e._state.keys[t].isActive=!0},AudioKeys.prototype._first=function(){for(var e=this,t=0;t<e._state.polyphony;t++)e._state.keys[t].isActive=!0},AudioKeys.prototype._highest=function(){var e=this,t=e._state.keys.map(function(e){return e.note});t.sort(function(e,t){return t===e?0:e>t?-1:1}),t.splice(e._state.polyphony,Number.MAX_VALUE),e._state.keys.forEach(function(e){-1!==t.indexOf(e.note)&&(e.isActive=!0)})},AudioKeys.prototype._lowest=function(){var e=this,t=e._state.keys.map(function(e){return e.note});t.sort(function(e,t){return e===t?0:t>e?-1:1}),t.splice(e._state.polyphony,Number.MAX_VALUE),e._state.keys.forEach(function(e){-1!==t.indexOf(e.note)&&(e.isActive=!0)})},AudioKeys.prototype._isSpecialKey=function(e){return 1===this._state.rows&&this._specialKeyMap[e]},AudioKeys.prototype._specialKey=function(e){var t=this;"octave"===t._specialKeyMap[e].type&&t._state.octaveControls?t._state.octave+=t._specialKeyMap[e].value:"velocity"===t._specialKeyMap[e].type&&t._state.velocityControls&&(t._state.velocity=t._specialKeyMap[e].value)},AudioKeys.prototype._specialKeyMap={90:{type:"octave",value:-1},88:{type:"octave",value:1},49:{type:"velocity",value:1},50:{type:"velocity",value:14},51:{type:"velocity",value:28},52:{type:"velocity",value:42},53:{type:"velocity",value:56},54:{type:"velocity",value:70},55:{type:"velocity",value:84},56:{type:"velocity",value:98},57:{type:"velocity",value:112},48:{type:"velocity",value:127}};
AudioContext.prototype.createFlarbarbarb=function(e,t,n,r){var a=this,c=function(){function c(){var r=a.currentTime;if(f>r+1.5)return!0;for(var c=1/e;r+1.5>f;){f+=c;var i=t+Math.random()*n-n/2;u.frequency.setValueAtTime(i,f)}return!0}this.input=a.createGain();var i=a.createGain(),u=a.createBiquadFilter(),o=a.createGain(),s=a.createGain(),v=a.currentTime;u.type="highpass",u.frequency.setValueAtTime(t,v),u.Q.value=10;var f=v;c(),setInterval(c,1e3),o.gain.value=r,s.gain.value=1-r,this.input.connect(u),this.input.connect(s),u.connect(o),o.connect(i),s.connect(i),this.connect=function(e){i.connect(e)}};return new c};
"use strict";window.addEventListener("load",function(){function e(e){return 440*Math.pow(2,(e-69)/12)}function t(t){var n=new StringVoice(e(t),d,c,r.input);n.start(0),void 0===u[t]&&(u[t]=[]),u[t].push(n)}function n(e){void 0!==u[e]&&u[e].forEach(function(t,n){t.stop(1),delete u[e][n]})}function o(e){var o=e.data[0]>>4,a=(15&e.data[0],e.data[1]),c=e.data[2];8==o||9==o&&0==c?n(a):9==o&&t(a,c/127)}var a=new AudioKeys,c=new AudioContext,u={},d={oscillators:[{octave:-1,detune:0},{octave:0,detune:0},{octave:0,detune:-2},{octave:0,detune:3},{octave:0,detune:17},{octave:0,detune:-13},{octave:0,detune:6},{octave:1,detune:-9},{octave:1,detune:17},{octave:2,detune:-14},{octave:2,detune:10}]},i=c.createSuperDelay(.7,.3,.3),r=c.createReverb("h.wav",.8),v=c.createFlarbarbarb(6,800,600,.5);i.connect(c.destination),v.connect(i.input),r.connect(v.input),a.down(function(e){t(e.keyCode)}),a.up(function(e){n(e.keyCode)}),navigator.requestMIDIAccess().then(function(e){e.inputs.forEach(function(e){e.onmidimessage=o})})});
AudioContext.prototype.createReverb=function(e,n){var t=this,a=function(){this.input=t.createGain();var a=t.createGain(),o=t.createConvolver(),c=t.createGain(),i=t.createGain();ajaxRequest=new XMLHttpRequest,ajaxRequest.open("GET",e,!0),ajaxRequest.responseType="arraybuffer",ajaxRequest.onload=function(){var e=ajaxRequest.response;t.decodeAudioData(e,function(e){o.buffer=e},function(e){"Error with decoding audio data"+e.err})},ajaxRequest.send(),c.gain.value=n,i.gain.value=1-n,this.input.connect(o),this.input.connect(i),o.connect(c),c.connect(a),i.connect(a),this.connect=function(e){a.connect(e)}};return new a};
var StringVoice=function(){function t(t,e,i,n){this.frequency=t,this.context=i,this.settings=e,this.oscillators=[];var a=i.currentTime,s=this.context.createBiquadFilter();s.type="lowpass",s.frequency.setValueAtTime(t,a),s.frequency.exponentialRampToValueAtTime(8*t,a+1),s.Q.value=10,s.connect(n),this.filter=s;var c=this.context.createGain();c.gain.setValueAtTime(0,i.currentTime),c.connect(this.filter),this.amp=c,e.oscillators.forEach(function(e){var i=this.context.createOscillator();i.type="sawtooth",i.frequency.value=t*Math.pow(2,e.octave),i.detune.value=e.detune,i.connect(this.amp),this.oscillators.push(i),i.start(0)}.bind(this))}return t.prototype.start=function(t){var e=this.context.currentTime;this.amp.gain.cancelScheduledValues(e),this.amp.gain.setValueAtTime(.001,e),this.amp.gain.linearRampToValueAtTime(.1/this.oscillators.length,this.context.currentTime+t)},t.prototype.stop=function(t){var e=this.context.currentTime;this.amp.gain.cancelScheduledValues(e),this.amp.gain.linearRampToValueAtTime(1e-5,e+t),setTimeout(function(){this.oscillators.forEach(function(t,e){t.stop()}.bind(this)),this.oscillators=[],this.amp=null,this.filter=null}.bind(this),1e3*t)},t}();
AudioContext.prototype.createSuperDelay=function(n,e,t){var c=this,a=function(){this.input=c.createGain();var a=c.createGain(),i=c.createDelay(),o=c.createGain(),r=c.createGain(),u=c.createGain();i.delayTime.value=n,o.gain.value=e,r.gain.value=t,u.gain.value=1-t,this.input.connect(i),this.input.connect(u),i.connect(o),i.connect(r),o.connect(i),r.connect(a),u.connect(a),this.connect=function(n){a.connect(n)}};return new a};
//# sourceMappingURL=data:application/json;base64,
